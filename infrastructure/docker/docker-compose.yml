version: '3.8'

services:
  backend:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../../data:/app/data
      - ../../cache:/app/cache
    environment:
      - DEBUG=True
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DATA_PATH=/app/data/streams
      - OUTPUT_PATH=/app/data/output
      - PATHWAY_CACHE=/app/cache/pathway_storage
    command: python -m backend.api.main
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - intelliflow
    restart: unless-stopped

  frontend:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile
    ports:
      - "8501:8501"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - API_BASE=http://backend:8000
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      - ../../data:/app/data
    command: streamlit run frontend/dashboard.py --server.port=8501 --server.address=0.0.0.0
    networks:
      - intelliflow
    restart: unless-stopped

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - intelliflow
  #   restart: unless-stopped

networks:
  intelliflow:
    driver: bridge

volumes:
  data:
  cache: